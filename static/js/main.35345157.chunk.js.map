{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","FeedbackOptionsWrapper","map","option","FeedbackOptionsButton","type","name","onClick","Section","title","children","SectionTitle","protoTypes","PropTypes","string","Statistics","good","neutral","bad","total","positivePercentage","StatisticsText","StatisticsValue","Notification","message","WrapperFeedback","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","e","target","setState","prevState","this","objKey","Object","keys","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,gBAAkB,sC,mBCAxFD,EAAOC,QAAU,CAAC,aAAe,gC,yLC0BlBC,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKC,UAAWC,IAAEC,uBAAlB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBACEJ,UAAWC,IAAEI,sBAEbC,KAAK,SACLC,KAAMH,EACNI,QAAST,EALX,SAOGK,GALIA,S,iCCNTK,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIX,UAAWC,IAAEW,aAAjB,SAAgCF,IAC/BC,MAKPF,EAAQI,WAAa,CACnBH,MAAOI,IAAUC,OACjBJ,SAAUG,IAAUC,QAGPN,Q,gBCiBAO,EA/BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,oBAAGrB,UAAWC,IAAEqB,eAAhB,mBACQ,sBAAMtB,UAAWC,IAAEsB,gBAAnB,SAAqCN,OAE7C,oBAAGjB,UAAWC,IAAEqB,eAAhB,qBACU,sBAAMtB,UAAWC,IAAEsB,gBAAnB,SAAqCL,OAE/C,oBAAGlB,UAAWC,IAAEqB,eAAhB,iBACM,sBAAMtB,UAAWC,IAAEsB,gBAAnB,SAAqCJ,OAE3C,oBAAGnB,UAAWC,IAAEqB,eAAhB,mBACQ,sBAAMtB,UAAWC,IAAEsB,gBAAnB,SAAqCH,OAE7C,oBAAGpB,UAAWC,IAAEqB,eAAhB,gCAEE,uBAAMtB,UAAWC,IAAEsB,gBAAnB,UAAqCF,EAArC,cCNOG,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,4BAAIA,OCCJC,G,MAAkB,CAAC,oBAEnBC,E,4MACJC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,mBAAqB,WACnB,MAA+B,EAAKD,MAEpC,OAFA,EAAQX,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBW,gCAAkC,WAChC,IAAQb,EAAS,EAAKW,MAAdX,KACR,OAAOc,KAAKC,MAAOf,EAAO,EAAKY,qBAAwB,MAAQ,G,EAGjE9B,gBAAkB,SAAAkC,GAChB,IAAM1B,EAAO0B,EAAEC,OAAO3B,KACtB,EAAK4B,UAAS,SAAAC,GAAS,sBACpB7B,EAAO6B,EAAU7B,GAAQ,O,4CAI9B,WACE,MAA+B8B,KAAKT,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBmB,EAASC,OAAOC,KAAKH,KAAKT,OAEhC,OACE,sBAAK5B,UAAW0B,EAAhB,UACE,cAAC,EAAD,CAAShB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEZ,QAASwC,EACTvC,gBAAiBsC,KAAKtC,oBAGK,IAA9BsC,KAAKR,qBACJ,cAAC,EAAD,CAAcJ,QAAQ,yBAEtB,cAAC,EAAD,CAASf,MAAM,aAAf,SACE,cAAC,EAAD,CACEO,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOiB,KAAKR,qBACZR,mBAAoBgB,KAAKP,6C,GA9CrBW,aAuDHd,ICpDAe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfA/C,EAAOC,QAAU,CAAC,sBAAwB,+CAA+C,uBAAyB,mD","file":"static/js/main.35345157.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"StatisticsText\":\"Statistics_StatisticsText__uI_MM\",\"StatisticsValue\":\"Statistics_StatisticsValue__3JIJP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SectionTitle\":\"Section_SectionTitle__2PQxj\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className={s.FeedbackOptionsWrapper}>\n      {options.map(option => (\n        <button\n          className={s.FeedbackOptionsButton}\n          key={option}\n          type=\"button\"\n          name={option}\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h1 className={s.SectionTitle}>{title}</h1>\n      {children}\n    </>\n  );\n};\n\nSection.protoTypes = {\n  title: PropTypes.string,\n  children: PropTypes.string,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      <p className={s.StatisticsText}>\n        good: <span className={s.StatisticsValue}>{good}</span>\n      </p>\n      <p className={s.StatisticsText}>\n        neutral:<span className={s.StatisticsValue}>{neutral}</span>\n      </p>\n      <p className={s.StatisticsText}>\n        bad:<span className={s.StatisticsValue}>{bad}</span>\n      </p>\n      <p className={s.StatisticsText}>\n        total:<span className={s.StatisticsValue}>{total}</span>\n      </p>\n      <p className={s.StatisticsText}>\n        positivePercentage:\n        <span className={s.StatisticsValue}>{positivePercentage}&#37;</span>\n      </p>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return (\n    <>\n      <p>{message}</p>\n    </>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\nimport './App.css';\n\nconst WrapperFeedback = ['WrapperFeedback'];\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const result = good + neutral + bad;\n    return result;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return Math.round((good / this.countTotalFeedback()) * 100) || 0;\n  };\n\n  onLeaveFeedback = e => {\n    const name = e.target.name;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const objKey = Object.keys(this.state);\n\n    return (\n      <div className={WrapperFeedback}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={objKey}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        {this.countTotalFeedback() === 0 ? (\n          <Notification message=\"There is no feedback\" />\n        ) : (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackOptionsButton\":\"FeedbackOptions_FeedbackOptionsButton__fTVcS\",\"FeedbackOptionsWrapper\":\"FeedbackOptions_FeedbackOptionsWrapper__9Mh1y\"};"],"sourceRoot":""}